


   iOS
   
    jailbreaking
   

  is the process of removing software restrictions imposed by
  
   Apple's
  
  on
  
   iOS
  
  and
  
   tvOS
  
  . It does this by using a series of software
  
   exploits
  
  . Jailbreaking permits
  
   root access
  
  to iOS, allowing the downloading and installation of additional applications, extensions, and themes that are unavailable through the official
  
   Apple App Store
  
  .
 
  iOS jailbreaking dates back to the original iPhone in July 2007 and has continued into the present day. Apple has responded with updates to iOS: patching exploits and upgrading hardware. Jailbreaking communities have not been legally threatened. The legal status of jailbreaking is unclear in most countries; while many prohibit tampering with digital locks, they tolerate jailbreaks that do not infringe on copyrights. In 2010, 2012, and 2015, the
  
   U.S. Copyright Office
  
  approved exemptions allowing smartphone users to jailbreak their devices.
  

    [1]
   





   iOS
  
  jailbreaking is the process of removing software restrictions imposed by iOS, Apple Inc's
  
   operating system
  
  , on its devices including the
  
   iPhone
  
  ,
  
   iPod touch
  
  ,
  
   iPad
  
  , and
  
   second-generation Apple TV
  
  . Jailbreaking is done by using software
  
   exploits
  
  , and it permits
  
   root access
  
  to the iOS file system and manager, so applications, extensions, and themes unavailable through the official
  
   Apple App Store
  
  can be downloaded.
  

    [2]
   



   Jailbreaking
  
  in general means breaking the device out of its "jail",
  

    [3]
   

  a metaphor used in
  
   Unix
  
  -style systems, for example in "
  
   FreeBSD jail
  
  ". A jailbroken iPhone, iPod touch, or iPad running iOS can still use the App Store,
  
   iTunes
  
  , and other normal functions, such as making telephone calls.
  

    [2]
   

  Furthermore, a jailbroken device can be reverted to a standard 'jailed' device by restoring the device in Recovery Mode.
 
  Jailbreaking is a form of
  
   privilege escalation
  
  ,
  

    [4]
   



    [5]
   

  and describes privilege escalation on devices by other manufacturers as well.
  

    [6]
   



    [7]
   


  One of the reasons for jailbreaking is to expand the feature set limited by Apple and its App Store.
  

    [8]
   

  Apple checks apps for compliance with its iOS Developer Program License Agreement before accepting them for distribution in the App Store. However, their reasons for banning apps are not limited to safety and security and may be regarded as arbitrary and capricious.
  

    [9]
   

  In one case, Apple mistakenly banned an app by a Pulitzer-Winning cartoonist because it violated its developer license agreement, which specifically bans apps that "contain content that ridicules public figures."
  

    [10]
   

  To access banned apps,
  

    [11]
   

  users rely on jailbreaking to circumvent Apple's censorship of content and features. Jailbreaking permits the downloading of programs not approved by Apple,
  

    [12]
   

  such as user interface customization and tweaks.
 
  Since software programs available through
  
   Cydia
  
  are not required to adhere to App Store guidelines, many of them are not typical self-contained apps but instead are extensions and customizations for iOS and other apps (commonly called tweaks).
  

    [13]
   

  Users install these programs for purposes including personalization and customization of the interface by tweaks developed by developers and designers,
  

    [13]
   

  adding desired features and fixing annoyances,
  

    [14]
   

  and making development work on the device easier by providing access to the filesystem and command-line tools.
  

    [15]
   



    [16]
   


  Many Chinese iOS device owners also jailbreak their phones to install third-party Chinese character
  
   input systems
  
  because they are easier to use than Apple's.
  

    [17]
   


  Jailbreaking also opens the possibility for using software to unofficially unlock
  
   carrier-locked
  
  iPhones so they can be used with other carriers.
  

    [18]
   

  Software-based unlocks have been available since September 2007,
  

    [19]
   

  with each tool applying to a specific iPhone model and
  
   baseband
  
  version (or multiple models and versions).
  

    [20]
   

  This includes the
  
   iPhone 4S
  
  ,
  
   iPhone 4
  
  ,
  
   iPhone 3GS
  
  , and
  
   iPhone 3G
  
  models.
 
  An example of unlocking an iPhone through a Jailbreak utility would be Redsn0w. Through this software, iPhone users will be able to create a custom IPSW and unlock their device. Moreover, during the unlocking process, there are options to Install Cydia and iPad baseband as well.
 
  Computer criminals may jailbreak an iPhone to install malware, or target jailbroken iPhones on which malware can be installed more easily. The Italian cybersecurity company
  
   Hacking Team
  
  , which sells hacking software to law enforcement agencies, advised police to jailbreak iPhones to allow tracking software to be installed on them.
  

    [21]
   



    [22]
   


  On iPhones, the installation of consumer software is generally restricted to installation through the App Store. Jailbreaking, therefore, allows the installation of pirated applications.
  

    [23]
   

  It has been suggested that a major motivation for Apple to prevent jailbreaking is to protect the income of its App Store, including third-party developers and allow the buildup of a sustainable market for third-party software.
  

    [24]
   

  However, the installation of pirated applications is also possible without jailbreaking
  
   [
   


      citation needed
     


   ]
  
  .
 
  When a device is booting, it loads Apple's own
  
   kernel
  
  initially. The device must then be
  
   exploited
  
  and have the kernel
  
   patched
  
  each time it is turned on.
 
  An
  
   "untethered" jailbreak
  
  has the property that if the user turns the device off and back on, the device will start up completely, and the kernel will be patched without the help of a computer â€“ thus enabling the user to boot without the need to use a computer.
  

    [25]
   

  These jailbreaks are harder to make and take a lot of reverse engineering and years of experience.
 
  With a
  
   "tethered" jailbreak
  
  , a computer is needed to turn the device on each time it is rebooted. If the device starts back up on its own, it will no longer have a patched kernel, and it may get stuck in a partially started state. By using a computer, the phone is essentially "re-jailbroken" (using the "boot tethered" feature of a jailbreaking tool) each time it is turned on.
  

    [26]
   

  With a tethered jailbreak, the user can still restart
  
   SpringBoard
  
  ("respring") on the device without needing to reboot.
 
  There is also
  
   "semi-tethered"
  
  solution, which means that when the device boots, it will no longer have a patched kernel (so it will not be able to run modified code), but it will still be usable for normal functions such as making phone calls, or texting.
  

    [27]
   

  To use any features that require running modified code, the user must start the device with the help of the jailbreaking tool in order for it to start with a patched kernel (jailbroken).
 
  In July 2016, Pangu team introduced the
  
   "semi-untethered" jailbreak
  
  , which functions like a semi-tethered solution in that when the device boots, it no longer has a patched kernel (and thus access to jailbroken functions,) but also like an untethered device, in that a computer is not required to re-patch the kernel in order to re-enable the jailbreak. It is accomplished by installing an app that re-patches the kernel after rebooting.
 
  Jailbreaking of iOS devices has sometimes been compared to "
  
   rooting
  
  " of
  
   Android
  
  devices. Although both concepts involve privilege escalation, they differ in scope. Some Android devices allow users to modify or replace the operating system after unlocking the
  
   bootloader
  
  .
  

    [28]
   



    [29]
   



    [30]
   

  Moreover, nearly all Android phones have an option to allow the user to install unknown, 3rd-party apps, so no exploit is needed for normal
  
   sideloading
  
  .
  

    [31]
   


  iOS is engineered with security measures including a "locked bootloader" to prevent users from modifying the operating system, and to prevent apps from gaining root privileges; jailbreaking an iOS device to defeat all security measures presents a significant technical challenge. It violates Apple's end-user license agreement for iOS.
  

    [32]
   

  Until 2015 sideloading apps in general was difficult for most individual users, requiring them to purchase developer membership, while corporations could install private applications onto corporate phones.
  

    [33]
   

  After 2015, this became free for all users, however doing so requires a basic understanding of Xcode and compiling iOS Apps. Apps installed this way have the restrictions of all other apps.
 
  The first
  
   iPhone
  

   worm
  
  , iKee, appeared in early November 2009, created by a 21-year-old
  
   Australian
  
  student in the town of
  
   Wollongong
  
  . He told Australian media that he created the worm to raise awareness of security issues: jailbreaking allows users to install an
  
   SSH
  
  service, which those users can leave in the default insecure state.
  

    [34]
   

  In the same month,
  
   F-Secure
  
  reported on a new malicious worm compromising bank transactions from jailbroken phones in the
  
   Netherlands
  
  , similarly affecting devices where the owner had installed SSH without changing the default password.
  

    [35]
   



    [36]
   

  In 2010 blogger
  
   John Gruber
  
  , who is close to Apple, said that users misunderstood some jailbreak exploits and that they were more serious than they appear. He commented that "it's odd how the press is mostly covering this as 'jailbreaking now more convenient' rather than 'remote code exploit now in the wild'", pointing out that the exploit allowed the creator of a malicious website to
  
   take control
  
  of iPhones accessing it.
  

    [37]
   


  Restoring a device with iTunes can remove a jailbreak.
  

    [38]
   



    [39]
   



    [40]
   


  In 2012, Forbes staff analyzed a UCSB study on 1407 free programs available from Apple and a third party source. Of the 1,407 free apps investigated, 825 were downloaded from Apple's App Store using the website App Tracker, and 526 from BigBoss (Cydia's default repository). 21% of official apps tested leaked device ID and 4% leaked location. Unofficial apps leaked 4% and 0.2% respectively. 0.2% of apps from Cydia leaked photos and browsing history, while the App Store leaked none. Unauthorized apps tended to respect privacy better than official ones.
  

    [41]
   

  Also, a program available in Cydia called PrivaCy allows user to control the upload of usage statistics to remote servers.
  

    [41]
   


  Installing software published outside the
  
   App Store
  
  has the potential to affect
  
   battery
  
  life and system stability if the software is poorly optimized or frequently uses resource-draining services (such as
  
   3G
  
  or
  
   Wi-Fi
  
  ).
  

    [42]
   



    [43]
   



    [44]
   

  However, even apps from the App Store are known to cause battery issues while running in the background.
  

    [45]
   


  In August 2015 the
  
   KeyRaider
  
  malware was discovered that affects only jailbroken iPhones.
  

    [46]
   


  Apple has released various updates to iOS that patch exploits used by jailbreak utilities; this includes a patch released in iOS 6.1.3 to software exploits used by the original
  
   evasi0n
  
  iOS 6â€“6.1.2 jailbreak, in iOS 7.1 patching the Evasi0n 7 jailbreak for iOS 7â€“7.0.6-7.1 beta 3. Bootrom exploits (exploits found in the hardware of the device) cannot be patched by Apple system updates, but can be fixed in hardware revisions such as new chips or new hardware in its entirety, as occurred with the iPhone 3GS in 2009.
  

    [47]
   


  On July 15, 2011, Apple released a new iOS version that closed the exploit used in
  
   JailbreakMe
  
  3.0. The German
  
   Federal Office for Information Security
  
  had reported that JailbreakMe uncovered the "critical weakness" that information could be stolen or unwillingly downloaded
  
   malware
  
  by iOS users clicking on maliciously crafted
  
   PDF
  
  files.
  

    [48]
   

  Before Apple released a fix for this security hole, jailbreak users had access to a fix published by the developer of JailbreakMe.
  
   [
   


      citation needed
     


   ]
  

  In Q3 2014 Apple released
  
   iOS
  
  8.1.3 that patched up the exploits used in jailbreak for
  
   iOS
  
  8.0-8.1.2. It was not possible to jailbreak until the iOS 8.3 update. The iOS 9.1 update on October 21, 2015, included a patch for the Pangu iOS 9.0-9.0.2 Jailbreak.
  

    [49]
   


  On August 13, 2015, Apple updated iOS to 8.4.1, patching the TaiG exploit. Pangu and Taig teams both said they were working on exploiting iOS 8.4.1, and Pangu demonstrated these chances at the WWDC 2015.
  

    [50]
   


  On September 16, 2015, iOS 9 was announced and made available; it was released with a new "Rootless" security system, dubbed a "heavy blow" to the jailbreaking community.
  

    [51]
   


  On October 21, 2015, seven days after the Pangu iOS 9.0-9.0.2 Jailbreak release, Apple pushed the iOS 9.1 update, which contained a patch that rendered it nonfunctional.
  

    [49]
   


  On August 4, 2016, Apple released iOS version 9.3.4 to patch the semi-untethered jailbreak for 64-bit devices.
 
  On August 25, 2016, Apple released iOS version 9.3.5 to patch three important vulnerabilities used for the secret jailbreak from the Pegasus Malware from the NSO Group.
 
  On January 23, 2017, Apple released iOS 10.2.1 to patch jailbreak exploits released by Google for the Yalu iOS 10 jailbreak created by Luca Todesco.
  

    [52]
   


  The legal status of jailbreaking is affected by laws regarding circumvention of digital locks, such as laws protecting
  
   digital rights management
  
  (DRM) mechanisms. Many countries do not have such laws, and some countries have laws including exceptions for jailbreaking.
 
  International treaties have influenced the development of laws affecting jailbreaking. The 1996
  
   World Intellectual Property Organization (WIPO) Copyright Treaty
  
  requires nations party to the treaties to enact laws against DRM circumvention. The American implementation is the
  
   Digital Millennium Copyright Act
  
  (DMCA), which includes a process for establishing exemptions for non-copyright-infringing purposes such as jailbreaking. The 2001
  
   European Copyright Directive
  
  implemented the treaty in Europe, requiring member states of the
  
   European Union
  
  to implement legal protections for technological protection measures. The Copyright Directive includes exceptions to allow breaking those measures for non-copyright-infringing purposes, such as jailbreaking to run alternative software,
  

    [53]
   

  but member states vary on the implementation of the directive.
 
  While Apple technically does not support jailbreaking as a violation of its EULA, jailbreaking communities have generally not been legally threatened by Apple. At least two prominent jailbreakers have been given positions at Apple, albeit in at least one case a temporary one.
  

    [54]
   



    [55]
   

  Apple has also regularly (though possibly somewhat jokingly) thanked jailbreak communities for detecting security holes in iOS release notes.
  

    [56]
   


  Apple's support article concerning jailbreaking claims that they "may deny service for an iPhone, iPad, or iPod touch that has installed any unauthorized software."
  

    [57]
   

  Therefore, anyone who is jailbroken, warranty or not, may or may not get support from Apple considering assistance with jailbreaking.
 
  In 2010,
  
   Electronic Frontiers Australia
  
  said that it is unclear whether jailbreaking is legal in Australia, and that anti-circumvention laws may apply.
  

    [58]
   

  These laws had been strengthened by the
  
   Copyright Amendment Act 2006
  
  .
 
  In November 2012, Canada
  
   amended its Copyright Act
  
  with new provisions prohibiting tampering with digital locks, with exceptions including software interoperability.
  

    [59]
   

  Jailbreaking a device to run alternative software is a form of circumventing digital locks for the purpose of software interoperability.
 
  There had been several efforts from 2008â€“2011 to amend the Copyright Act (Bill C-60,
  
   Bill C-61
  
  , and
  
   Bill C-32
  
  ) to prohibit tampering with digital locks, along with initial proposals for C-11 that were more restrictive,
  

    [60]
   

  but those bills were set aside. In 2011,
  
   Michael Geist
  
  , a Canadian copyright scholar, cited iPhone jailbreaking as a non-copyright-related activity that overly-broad Copyright Act amendments could prohibit.
  

    [61]
   



   India's copyright law
  
  permits circumventing DRM for non-copyright-infringing purposes.
  

    [62]
   



    [63]
   

  Parliament introduced a bill including this DRM provision in 2010 and passed it in 2012 as Copyright (Amendment) Bill 2012.
  

    [64]
   

  India is not a signatory to the WIPO Copyright Treaty that requires laws against DRM circumvention, but being listed on the US
  
   Special 301 Report
  
  "Priority Watch List" applied pressure to develop stricter copyright laws in line with the WIPO treaty.
  

    [62]
   



    [63]
   



   New Zealand's copyright law
  
  allows the use of technological protection measure (TPM) circumvention methods as long as the use is for legal, non-copyright-infringing purposes.
  

    [65]
   



    [66]
   

  This law was added to the
  
   Copyright Act 1994
  
  as part of the
  
   Copyright (New Technologies) Amendment Act 2008
  
  .
 
  Jailbreaking might be legal in Singapore if done to provide interoperability and not circumvent copyright, but that has not been tested in court.
  

    [67]
   


  The law
  
   Copyright and Related Rights Regulations 2003
  
  makes circumventing DRM protection measures legal for the purpose of interoperability but not copyright infringement. Jailbreaking may be a form of circumvention covered by that law, but this has not been tested in court.
  

    [53]
   



    [68]
   

  Competition laws may also be relevant.
  

    [69]
   


  The main law that affects the legality of iOS jailbreaking in the United States is the 2012
  
   Digital Millennium Copyright Act
  
  (DMCA), which says "no person shall circumvent a
  
   technological measure
  
  that effectively controls access to a work protected under" the DMCA, since this may apply to jailbreaking.
  

    [70]
   

  Every three years, the law allows the public to propose exemptions for legitimate reasons for circumvention, which last three years if approved. In 2010 and 2012, the U.S. Copyright Office approved exemptions that allowed smartphone users to jailbreak their devices legally,
  

    [71]
   

  and in 2015 the Copyright Office approved an expanded exemption that also covers other all-purpose mobile computing devices, such as tablets.
  

    [72]
   

  It is still possible Apple may employ technical countermeasures to prevent jailbreaking or prevent jailbroken phones from functioning.
  

    [73]
   

  It is unclear whether it is legal to traffic in the tools used to make jailbreaking easy.
  

    [73]
   


  In 2010 Apple announced that jailbreaking "can violate the warranty".
  

    [74]
   

  This may be affected by the
  
   Magnuson-Moss Warranty Act of 1975
  
  .
 
  In 2007
  
   Tim Wu
  
  , a professor at
  
   Columbia Law School
  
  , argued that jailbreaking "Apple's superphone is legal, ethical, and just plain fun."
  

    [75]
   

  Wu cited an explicit exemption issued by the
  
   Library of Congress
  
  in 2006 for personal carrier unlocking, which notes that locks "are used by wireless carriers to limit the ability of subscribers to switch to other carriers, a business decision that has nothing whatsoever to do with the interests protected by copyright" and thus do not implicate the DMCA.
  

    [76]
   

  Wu did not claim that this exemption applies to those who help others unlock a device or "traffic" in software to do so.
  

    [75]
   


  In 2010, in response to a request by the
  
   Electronic Frontier Foundation
  
  , the
  
   U.S. Copyright Office
  
  explicitly recognized an exemption to the DMCA to permit jailbreaking in order to allow iPhone owners to use their phones with applications that are not available from Apple's store, and to unlock their iPhones for use with unapproved carriers.
  

    [77]
   



    [78]
   


   Apple
  
  had previously filed comments opposing this exemption and indicated that it had considered jailbreaking to be a violation of copyright (and by implication prosecutable under the DMCA). Apple's request to define copyright law to include jailbreaking as a violation was denied as part of the 2009 DMCA rulemaking. In their ruling, the Library of Congress affirmed on July 26, 2010 that jailbreaking is exempt from DMCA rules with respect to circumventing digital locks. DMCA exemptions must be reviewed and renewed every three years or else they expire.
 
  On October 28, 2012, the US Copyright Office released a new exemption ruling. The jailbreaking of smartphones continued to be legal "where circumvention is accomplished for the sole purpose of enabling interoperability of [lawfully obtained software] applications with computer programs on the telephone handset." However, the U.S. Copyright office refused to extend this exemption to tablets, such as iPads, arguing that the term "tablets" is broad and ill-defined, and an exemption to this class of devices could have unintended side effects.
  

    [79]
   



    [80]
   



    [81]
   

  The Copyright Office also renewed the 2010 exemption for unofficially unlocking phones to use them on unapproved carriers, but restricted this exemption to phones purchased before January 26, 2013.
  

    [80]
   


  A few days after the original iPhone became available in July 2007, developers released the first jailbreaking tool for it,
  

    [82]
   

  and soon a jailbreak-only game app became available.
  

    [83]
   

  In October 2007,
  
   JailbreakMe
  
  1.0 (also called "AppSnapp") allowed people to jailbreak iPhone OS 1.1.1 on both the iPhone and iPod touch,
  

    [84]
   



    [85]
   

  and it included
  
   Installer.app
  
  as a way to get software for the jailbroken device. In February 2008, Zibri released ZiPhone, a tool for jailbreaking iPhone OS 1.1.3 and iPhone OS 1.1.4.
  

    [86]
   


  The
  
   iPhone Dev Team
  
  which is not affiliated with Apple, has released a series of free desktop-based jailbreaking tools. In July 2008 it released a version of
  
   PwnageTool
  
  to jailbreak the then new iPhone 3G on iPhone OS 2.0 as well as the iPod touch,
  

    [87]
   



    [88]
   

  newly including
  
   Cydia
  
  as the primary third-party installer for jailbroken software.
  

    [89]
   

  PwnageTool continues to be updated for untethered jailbreaks of newer iOS versions.
  

    [90]
   



    [91]
   


  In November 2008 the iPhone Dev Team released QuickPWN to jailbreak iPhone OS 2.2 on iPhone and iPod touch, with options to enable past functionality that Apple had disabled on certain devices.
  

    [92]
   


  After Apple released iOS 3.0 in June 2009, the Dev Team published
  
   redsn0w
  
  as a simple jailbreaking tool for Mac and Windows, and also updated PwnageTool primarily intended for expert users making custom firmware, and only for Mac.
  

    [93]
   

  It continues to maintain redsn0w for jailbreaking most versions of iOS 4 and iOS 5 on most devices.
  

    [94]
   



   George Hotz
  
  developed the first iPhone unlock. In 2009, he released a jailbreaking tool for the iPhone 3GS on iPhone OS 3.0 called
  
   purplera1n
  
  ,
  

    [95]
   

  and
  
   blackra1n
  
  for iPhone OS version 3.1.2 on the 3rd generation iPod touch and other devices.
  

    [96]
   


  In October 2010, he released limera1n, a low-level
  
   boot ROM
  
  exploit that permanently works to jailbreak the iPhone 4 and is used as part of tools including redsn0w.
  

    [97]
   


  Nicholas Allegra (better known as "comex") released a program called Spirit in May 2010.
  
   [
   


      citation needed
     


   ]
  

   Spirit
  
  jailbreaks devices including iPhones running iPhone OS 3.1.2, 3.1.3, and iPad running iOS 3.2
  

    [98]
   

  In August 2010, comex released
  
   JailbreakMe
  
  2.0, the first a web-based tool to jailbreak the iPhone 4 (on iOS 4.0.1).
  

    [99]
   



    [100]
   

  In July 2011, he released JailbreakMe 3.0,
  

    [101]
   

  a web-based tool for jailbreaking all devices on certain versions of iOS 4.3, including the iPad 2 for the first time (on iOS 4.3.3).
  

    [102]
   


  In 2011, JailbreakMe 3.0 used a flaw in
  
   PDF
  
  file rendering in mobile
  
   Safari
  
  .
  

    [103]
   



    [104]
   


  Chronic Dev Team initially released
  
   greenpois0n
  
  in October 2010, a desktop-based tool for jailbreaking iOS 4.1
  

    [105]
   

  and later iOS 4.2.1
  

    [106]
   

  on most devices including the Apple TV,
  

    [107]
   

  as well as iOS 4.2.6 on CDMA (Verizon) iPhones.
  

    [108]
   


  As of December 2011, redsn0w included the "Corona" untether by pod2g for iOS 5.0.1 for iPhone 3GS, iPhone 4, iPad (1st generation), and iPod touch (3rd and 4th generation).
  

    [91]
   

  As of June 2012, redsn0w also includes the "Rocky Racoon" untether by pod2g for iOS 5.1.1 on all iPhone, iPad, and iPod touch models that support iOS 5.1.1.
  

    [109]
   


  The iPhone Dev Team, Chronic Dev Team, and pod2g collaborated to release
  
   Absinthe
  
  in January 2012, a desktop-based tool to jailbreak the
  
   iPhone 4S
  
  for the first time and the
  
   iPad 2
  
  for the second time, on iOS 5.0.1 for both devices and also iOS 5.0 for iPhone 4S.
  

    [25]
   



    [26]
   



    [110]
   



    [111]
   

  In May 2012 it released Absinthe 2.0, which can jailbreak iOS 5.1.1 untethered on all iPhone, iPad, and iPod touch models that support iOS 5.1.1, including jailbreaking the
  
   third-generation iPad
  
  for the first time.
  

    [112]
   

  The hackers together called the evad3rs released an iOS 6.X jailbreak tool called "evasi0n" available for Linux, OS X, and Windows on Monday, February 4, 2013 at noon Eastern Standard Time.
  
   [
   


      citation needed
     


   ]
  
  Due to the high volume of interest in downloading the jailbreak utility, the site initially gave anticipating users download errors.
  
   [
   


      citation needed
     


   ]
  
  When Apple upgraded its software to iOS 6.1.3 it permanently patched out the evasi0n jailbreak.
  

    [113]
   

  In April 2013, the latest versions of Sn0wbreeze was released, which added the support for tethered jailbreaking on A4 devices (i.e. devices
  
   not
  
  newer than the iPhone 4, iPad (1st generation), or iPod touch (4th generation)).
  

    [114]
   



    [115]
   



    [116]
   


  On December 22, 2013, the evad3rs released a new version of
  
   evasi0n
  
  that supports jailbreaking iOS 7.0.x, known as evasi0n7.
  
   [
   


      citation needed
     


   ]
  
  On December 30, 2013, winocm, ih8sn0w and SquiffyPwn released p0sixspwn for untethering devices on iOS 6.1.3 â€“ 6.1.5. Initially, it was necessary to jailbreak tethered using redsn0w and install p0sixpwn at Cydia. A few days later, on January 4, 2014, the same team released a version of p0sixpwn for jailbreaking using a computer.
  
   [
   


      citation needed
     


   ]
  

  iOS 7.1 patched the exploits used by evasi0n7, and on June 23, 2014, Pangu, a Chinese untethered jailbreak was released for iOS 7.1.
  
   [
   


      citation needed
     


   ]
  

  On October 22, 2014,
  
   Pangu Team
  
  released Pangu8 to jailbreak all devices running iOS 8-8.1. The first versions did not bundle Cydia, nor was there an iOS 8 compatible version of Cydia at the time.
  
   [
   


      citation needed
     


   ]
  

  On November 29, 2014, TaiG team released their jailbreak tool called "TaiG" for devices running iOS 8.0-8.1.1. On December 10, 2014, the app was updated to include support for iOS 8.1.2.
  

    [117]
   

  On July 3, 2015, TaiG 2.3.0 was released, which includes support for iOS 8.0-8.4.
  

    [118]
   


  On 10 September 2015, 6 days before iOS 9 was released, iH8sn0w had demonstrated a working exploit on his Twitter page, linking to a YouTube video.
  

    [119]
   


  On October 14, 2015, Pangu Team released Pangu 9, their jailbreak tool for iOS 9.0 through 9.0.2. On March 11, 2016, Pangu Team updated their tool to support iOS 9.1 for 64-bit devices.
  

    [120]
   



    [121]
   



    [122]
   


  On December 21, 2016, well-known hacker Luca Todesco and Marco Grassi released a beta semi-untethered jailbreak tool for
  
   iOS 10.1
  
  known as Yalu for select 64-bit iOS devices. This version is extremely unstable and was only meant for developers.
  

    [123]
   

  On January 26, 2017, an separate, more stable version for
  
   iOS 10.2
  
  was released, eventually supporting all 64-bit iOS devices except for the iPhone 7 and 7 Plus, which is only supported by the older, more unstable version for 10.1.1. Both jailbreaks are installed through a computer application known as Cydia Impactor, which allows signing of apps not in the
  
   App Store
  
  .
  

    [124]
   

  Todesco said that the newer version would be eventually updated to support the iPhone 7 and 7 Plus up to iOS 10.1.1, however, he left the jailbreaking scene on March 28th, abandoning both jailbreaks before it was released.
  

    [125]
   



    [126]
   





   Device
  



   IOS
  



     (depends on device)
    