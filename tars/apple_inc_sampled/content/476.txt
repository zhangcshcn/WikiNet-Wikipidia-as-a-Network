


   OS/360
  
  , officially known as
  
   IBM System/360 Operating System
  
  ,
  

    [1]
   



    [2]
   

  is a discontinued
  
   batch processing
  

   operating system
  
  developed by
  
   IBM
  
  for their then-new
  
   System/360
  

   mainframe computer
  
  , announced in 1964; it was heavily influenced by the earlier
  
   IBSYS/IBJOB
  
  and
  
   Input/Output Control System
  
  (IOCS) packages. It was one of the earliest operating systems to require the computer hardware to include at least one
  
   direct access storage device
  
  .
 
  Although OS/360 itself was discontinued, successor operating systems including the
  
   virtual storage
  

   MVS
  
  and the
  
   64 bit
  

   z/OS
  
  are still run as of 2017
  

    [update]
   

  and maintain application-level compatibility.
 
  IBM announced three different levels of OS/360, generated from the same tapes and sharing most of their code. IBM eventually renamed these options and made some significant design changes:
 
  Users often coined nicknames, e.g., Big OS, OS/MFT, but none of these names had any official recognition by IBM.
 
  The other major operating system for System/360 hardware was
  
   DOS/360
  
  .
 
  OS/360 is in the
  
   public domain
  
  and can be downloaded freely. As well as being run on actual System/360 hardware, it can be executed on the free
  
   Hercules emulator
  
  , which runs under most
  
   UNIX
  
  and
  
   Unix-like
  
  systems including
  
   GNU/Linux
  
  ,
  
   Solaris
  
  , and
  
   Mac OS X
  
  , as well as
  
   Windows
  
  . There are OS/360 turnkey CDs that provide pregenerated OS/360 21.8 systems ready to run under Hercules.
 


  IBM originally intended that System/360 should have only one batch-oriented
  

    [NB 2]
   

  operating system, OS/360.
  

    [3]
   

  It also intended to supply a separate
  
   timesharing
  
  operating system,
  
   TSS/360
  
  . There are at least two accounts of why IBM eventually decided to produce other, simpler batch-oriented operating systems:
 
  IBM introduced a series of stop-gaps to prevent System/360 hardware sales from collapsing—first
  
   BOS/360
  
  (Basic Operating System, for the smallest machines with 8K byte memories), then
  
   TOS/360
  
  (Tape Operating System, for machines with at least 16K byte memories and only tape drives), and finally
  
   DOS/360
  
  (Disk Operating System), which became a mainstream operating system and is the ancestor of today's widely used
  
   z/VSE
  
  .
  

    [5]
   



    [6]
   


  IBM released three variants of OS/360: PCP (Primary Control Program), a stop-gap which could run only one job at a time, in 1966; MFT (
  
   Multiprogramming
  
  with Fixed number of Tasks) for the mid-range machines, and MVT (Multiprogramming with Variable number of Tasks) for the top end.
  

    [7]
   

  MFT and MVT were used until at least 1981,
  

    [8]
   

  a decade after their successors had been launched.
  

    [9]
   

  The division between MFT and MVT arose because of storage limitations and scheduling constraints. Initially IBM maintained that MFT and MVT were simply "two configurations of the
  
   OS/360
  
  control program", although later IBM described them as "separate versions of OS/360".
  

    [2]
   



    [3]
   


  IBM originally wrote OS/360 in
  
   assembly language
  
  . Later on, IBM wrote some OS/360 code in a new language,
  
   Basic Systems Language
  
  (BSL),
  

    [10]
   

  derived from PL/I. A large amount of the TSO code in Release 20 was written in BSL.
 
  TSS/360 was so late and unreliable that IBM canceled it, although IBM later supplied three releases of the TSS/370 PRPQ. By this time
  
   CP-67
  
  was running well enough for IBM to offer it without warranty as a timesharing facility for a few large customers.
  

    [11]
   


  These three options offered such similar facilities that porting applications between them usually required minimal effort; the same versions of IBM Program Products, application and
  
   utility
  
  software ran on both. The text below mostly treats
  
   PCP
  
  ,
  
   MFT
  
  and
  
   MVT
  
  as simply new names for the original
  
   SSS
  
  ,
  
   MSS
  
  and
  
   MPS
  
  , although there were some design changes. Also, the text does not distinguish between M65MP and MVT.
 
  Officially, PCP, MFT and MVT are not separate operating systems from OS/360,
  

    [2]
   

  they are only install-time configuration options—in today's words, three different variants of the OS kernel. However, because of quite different behavior and memory requirements, users commonly consider them de facto separate operating systems, and refer to them as "early OS/360", "OS/MFT", "OS/MVT", respectively. MFT differs from MVT mainly in the way in which it manages memory: when installing MFT, customers specify a fixed number of "
  
   partitions
  
  ", areas of memory with fixed boundaries, in which application programs can be run simultaneously.
  

    [3]
   


  Primary Control Program (PCP) was intended for users with small memories. It is similar to MFT
  

    [NB 3]
   

  with one
  
   partition
  
  . IBM dropped the PCP option in the final releases of OS/360.
 
  Also referred to as SYS=MIN in macro expansions that were system-dependent.
 
  Multiprogramming with a Fixed number of Tasks (MFT) was intended to serve as a stop-gap until Multiprogramming with a Variable number of Tasks (MVT), the intended "target" configuration of OS/360, became available in 1967. Early versions of MVT had many problems, so the simpler MFT continued to be used for many years. After introducing new
  
   System/370
  
  machines with virtual memory, in 1972 MFT was developed into
  
   OS/VS1
  
  , the last system of this particular line.
 
  The first version of MFT
  

    [12]
   

  shared much of the code and architecture with PCP, and was limited to four
  
   partitions
  
  . It was very cumbersome to run multiple partitions. Many installations used
  
   Houston Automatic Spooling Priority
  
  (HASP) to mitigate the complexity.
 
  MFT Version II (MFT-II)
  

    [13]
   

  shared much more of the Control Program and Scheduler code with MVT, and was much more flexible to run. The maximum number of partitions increased to 52.
 
  Later modifications of MFT-II added
  
   sub-tasking
  
  , so that the fixed number of tasks was no longer fixed, although the number of partitions did remain a limitation.
 
  Experience indicated that it was not advisable to install MFT on systems with less than 256 KB of memory, which in the 1960s was quite a large amount.
  

    [14]
   


  Also referred to as SYS=INT in macro expansions that were system-dependent.
 
  Multiprogramming with a Variable number of Tasks (MVT)
  

    [15]
   

  was the most sophisticated of three available configurations of
  
   OS/360
  
  's control program, and one of two available configurations in the final releases.
  

    [16]
   

  MVT was intended for the largest machines in the System/360 family. Introduced in 1964, it did not become available until 1967. Early versions had many problems and the simpler MFT continued to be used for many years.
 
  MVT treated all memory not used by the operating system as a single pool from which contiguous "regions" could be allocated as required by an unlimited
  

    [NB 4]
   

  number of simultaneous application and systems programs. This scheme was more flexible than MFT's and in principle used memory more efficiently, but was liable to
  
   fragmentation
  
  - after a while one could find that, although there was enough spare memory in total to run a program, it was divided into separate chunks none of which was large enough.
  

    [3]
   

  System/360 lacked memory relocation hardware so memory compaction could not be used to reduce fragmentation. A facility called Rollout/Rollin could swap a running job out to secondary storage to make its memory available to another job. The rolled-out job would, however, have to be "rolled-in" to the original memory locations when they again became available.
  

    [17]
   


  In 1971 the
  
   Time Sharing Option
  
  (TSO) for use with MVT was added as part of release 20.1. TSO became widely used for program development because it provided an editor, the ability to submit batch jobs, be notified of their completion, and view the results without waiting for printed reports, and
  
   debuggers
  
  for some of the programming languages used on System/360. TSO in OS/360
  

    [NB 5]
   

  communicated with terminals by using
  
   Telecommunications Access Method
  
  (TCAM). TCAM's name suggests that IBM hoped it would become the standard access method for data communications, but in fact TCAM in OS/VS2 was used almost entirely for TSO and was largely superseded by
  
   Virtual Telecommunications Access Method
  
  (VTAM) in the mid-to-late 1970s.
 
  Also referred to as SYS=VMS in invocations of some macros that were system-dependent.
 
  Model 65 Multiprocessing (M65MP) is a variant of MVT. It runs on a 360/65 in Multisystem mode
  

    [18]
   

  M65MP traps use of the Set System Mask (SSM) instruction to serialize disabled code between the two CPUs. For the most part an M65MP system has the same behavior and interfaces as any other MVT system.
 
  The keyword parameter SYS=VMS included M65MP as well as uniprocessor MVT.
 
  PCP, MFT and MVT provide similar facilities from the point of view of application programs:
 
  Some features were available only for MFT and MVT:
 
  When
  
   System/370
  
  was announced in 1970 it offered essentially the same facilities as System/360 but with about 4 times the processor speeds of similarly priced System/360 CPUs.
  

    [19]
   

  Then in 1972 IBM announced "System/370 Advanced Functions", of which the main item was that future sales of System/370 would include
  
   virtual memory
  
  capability and this could also be retro-fitted to existing System/370 CPUs. Hence IBM also committed to delivering enhanced operating systems which could support the use of virtual memory.
  

    [20]
   



    [21]
   


  IBM provided an OS/360
  
   SYSGEN
  
  option for S/370 support, which did not support DAT but did:
 

   OS/VS1
  
  is the successor to MFT, and offers similar facilities with several additions, e.g., RES, virtual memory. VSAM (see below) was initially available as an independent component release (ICR) and later integrated into the OS/VS1 base.
  

    [3]
   

  IBM released fairly minor enhancements of OS/VS1 until 1983, and in 1984 announced that there would be no more.
  
   AIX/370
  
  ,
  
   AIX/ESA
  
  ,
  
   DPPX
  
  , OS/VS1 and TSS/370 are the only System/370 operating systems that do not have modern descendants.
 
  OS/VS2 release 1 was just
  
   MVT
  
  plus virtual memory and VSAM (see below).
  

    [3]
   

  This version was eventually renamed
  
   OS/VS2 SVS
  
  , for Single Virtual Storage, when OS/VS2 Release 2, also known as MVS, for Multiple Virtual Storage, was introduced. SVS was intended as a stepping stone from MVT to MVS, and is only of historical interest today.
 
  In 1974 IBM released what it described as OS/VS2 Release 2 but which was really a new operating system that was
  
   upwards-compatible
  
  with OS/VS2 Release 1. The Supervisor of the new system had been largely rewritten in a new dialect of BSL,
  
   PL/S
  
  ;
  

    [22]
   



    [23]
   

  BSL and PL/S were dialects of
  
   PL/I
  
  with extensions designed to transcribe
  
   Assembly language
  
  code, including
  
   privileged instructions
  
  needed to control the computer as a whole. Time-sensitive OS components, such as the OS Dispatcher and the
  
   IOS
  
  , notably, among many others, remained coded in
  
   Assembly Language
  
  , which had been enhanced for OS/VS in the IFOX00 Assembler
  

    [NB 8]
   

  (from the older, OS/360 IEUASM Assembler).
 
  The new version's most noticeable feature was that it supported multiple virtual address spaces - different applications thought they were using the same range of virtual addresses, but the new system's
  
   virtual memory
  
  facilities mapped these to different ranges of real memory addresses. Each application's address space consists of 3 areas: operating system (one instance shared by all jobs); an application area which was unique for each application; shared virtual area used for various purposes including inter-job communication. IBM promised that the application areas would always be at least 8MB. This approach eliminated the risk of memory
  
   fragmentation
  
  that was present in MVT and SVS, and improved the system's internal security.
  

    [3]
   

  The new system rapidly became known as "
  
   MVS
  
  " (Multiple Virtual Storages), the original OS/VS2 became known as "SVS" (Single Virtual Storage) and IBM itself accepted this terminology and labelled MVS's successors "MVS/
  
   xxx
  
  ".
  

    [24]
   


  MVS introduced a new approach to workload management, allowing users to define performance targets for high-priority batch jobs. This enabled users to give their systems more work than before without affecting the performance of the highest-priority jobs.
  

    [25]
   


  MVS was IBM's first mainstream operating system on the System/370
  

    [NB 9]
   

  to support what IBM called
  
   "tightly coupled multiprocessing"
  
  , in which 2 (later, up to 12, for IBM mainframes, and up to 16, for
  
   Amdahl
  
  mainframes) CPUs shared concurrent access to the same memory (and a
  
   single
  
  copy of the operating system and peripheral devices), providing greater processing power and a degree of
  
   graceful degradation
  
  if one CPU failed (which, fortunately, became an increasingly rare event, as system "up time" rose from
  
   hours
  
  to
  
   days
  
  and, then, to
  
   years
  
  .)
 
  Initially MVS was supplied with a
  
   job queue
  
  manager called
  
   JES2
  
  (Job Entry Subsystem 2), which was descended from HASP (
  
   Houston Automatic Spooling Priority
  
  ) and also supported
  
   Remote Job Entry
  
  from workstations located elsewhere. JES2 can only manage jobs for one CPU (which might be a tightly coupled multiprocessor system). In 1976 IBM provided another option,
  
   JES3
  
  (Job Entry Subsystem 3), a descendant of ASP (
  
   Attached Support Processor
  
  ), which allows one CPU to manage a single job queue feeding work to several physically distinct CPUs, and therefore allows one operator's console to manage the work of all those CPUs.
  

    [26]
   

  Note: JES1 was the job queue manager for OS/VS1 (see above).
 
  IBM hoped that
  
   Virtual storage access method
  
  (VSAM) would replace its earlier sequential, indexed and direct access methods as it provided improved versions of these:
  

    [27]
   



    [28]
   


  These VSAM formats became the basis of IBM's
  
   database management systems
  
  ,
  
   IMS/VS
  
  and
  
   DB2
  
  - usually ESDS for the actual data storage and KSDS for indexes.
 
  VSAM also provides a new implementation of the catalog facility which enables applications to access files by name, without needing to know which disk drive(s) they are on. VSAM datasets
  
   must
  
  be defined in a VSAM catalog before they are used, and non-VSAM datasets can also be listed in a VSAM catalog. The MVS Master Catalog
  
   must
  
  be a VSAM catalog.
  

    [28]
   

  Catalogs were originally provided in OS/360 in the form of CVOLs; MVS added a separate catalog structure for VSAM; later IBM added a third type of catalog known as an ICF catalog.
  

    [30]
   

  (IBM removed support for CVOL and VSAM catalogs as of 2000, since they were not Y2K-compliant; hence in z/OS, only ICF catalogs are supported.)
  

    [31]
   


  In 1974 IBM announced
  
   Systems Network Architecture
  
  , which was meant to reduce the cost of running large networks of terminals, mainly by using communications lines much more efficiently. This is only available for IBM's virtual memory operating systems, since its mainframe software component,
  
   VTAM
  
  is only available with these operating systems.
 
  In 1977 IBM announced MVS/System Extensions, a "program product" (i.e. it cost extra money) which improved MVS performance.
  

    [32]
   


  Descendants of MVS are still used on the latest descendants of System/360,
  
   System/390
  
  and
  
   zSeries
  
  ; it was renamed to
  
   OS/390
  
  for System/390, and the 64-bit version for the zSeries was named
  
   z/OS
  
  .
 
  These data are taken from
  
   IBM 360 Operating Systems Release History
  
  ,
  
   System/370 Market Chronology of Products & Services
  
  ,
  
   IBM.
   
    "z/OS, z/OS.e, and OS/390 marketing and service announce, availability, and withdrawal dates"
   
   .
  




  and IBM announcement letters.
 