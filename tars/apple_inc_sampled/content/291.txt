


   Symbian
  
  was a
  
   mobile operating system
  
  (OS) and
  
   computing platform
  
  designed for
  
   smartphones
  
  .
  

    [6]
   

  Symbian was originally developed as a
  
   closed-source
  
  OS for
  
   PDAs
  
  in 1998 by
  
   Symbian Ltd.
  


    [7]
   

  Symbian OS was a descendant of
  
   Psion
  
  's
  
   EPOC
  
  , and runs exclusively on
  
   ARM
  

   processors
  
  , although an unreleased
  
   x86
  
  port existed. Symbian was used by many major mobile phone brands, like
  
   Samsung
  
  ,
  
   Motorola
  
  ,
  
   Sony Ericsson
  
  , and above all by
  
   Nokia
  
  . As a pioneer that established the smartphone industry, it was the most popular smartphone OS on a worldwide average until the end of 2010 –  at a time when smartphones were in limited use, when it was overtaken by
  
   Android
  
  , as Google and its partners achieved wide adoption.
 
  Symbian OS was (from 2001) essentially a shell system and required an additional
  
   user interface
  
  (as
  
   middleware
  
  ) to form a complete operating system. Symbian OS became prominent from the
  
   S60
  
  (formerly Series 60) platform built by Nokia, first released in 2002 and powering most Nokia smartphones. Symbian eventually became the most widely used smart mobile operating system.
  
   UIQ
  
  was another Symbian user interface mostly used by Motorola and Sony Ericsson, whereas in
  
   Japan
  
  there was also the
  
   MOAP
  
  platform. Applications of these interfaces were not compatible with each other, despite each being built atop Symbian OS. Nokia was the majority shareholder in Symbian Ltd. and purchased the entire share in 2008.
  

    [8]
   

  The non-profit
  
   Symbian Foundation
  
  was then created to make a
  
   royalty-free
  
  successor to Symbian OS - seeking to unify the platform, S60 became the Foundation's favoured UI and UIQ stopped development. Symbian^1 (or S60 5th Edition) was created as a result in 2009. Symbian^2 was only used by carrier
  
   NTT DoCoMo
  
  , one of the members of the Foundation, for the Japanese market. Symbian^3 was released as in 2010, by which time it became fully
  
   open source
  
  . Symbian^3 received the Anna and Belle updates in 2011.
  

    [9]
   



    [10]
   


  The Symbian Foundation disintegrated in late 2010 and Nokia took back control of the OS development.
  

    [11]
   



    [12]
   

  In February 2011, Nokia, by now the only remaining company still supporting Symbian outside Japan, announced that it would use
  
   Microsoft
  
  's
  
   Windows Phone 7
  
  as its primary smartphone platform, whilst Symbian would be gradually wound down.
  

    [13]
   



    [14]
   

  Two months later, Nokia moved the OS to closed licensing.,
  

    [15]
   

  and later outsourced Symbian development to
  
   Accenture
  
  .
  

    [6]
   



    [16]
   

  Although support was promised until 2016, there was little development from Accenture, where most Symbian developers had already left by 2012.
  

    [17]
   

  In January 2014, Nokia stopped accepting new or changed Symbian software from developers.
  

    [18]
   


  The
  
   Nokia 808 PureView
  
  was officially the last Symbian smartphone from Nokia.
  

    [19]
   

  However NTT DoCoMo continued releasing OPP(S) (Operator Pack Symbian, successor of MOAP) devices in Japan, which still act as middleware on top of Symbian.
  

    [20]
   

  Phones running this include the
  


     F-07F
    


    （
    

      Japanese
     
     ：
    

     -{
     
      F-07F
     
     }-
    
    ）
   

  from
  
   Fujitsu
  
  and
  


     SH-07F
    


    （
    

      Japanese
     
     ：
    

     -{
     
      SH-07F
     
     }-
    
    ）
   

  from
  
   Sharp
  
  in 2014.
  

    [21]
   



    [22]
   




  Symbian originated from
  
   EPOC32
  
  , an operating system created by
  
   Psion
  
  in the 1990s. In June 1998, Psion Software became
  
   Symbian Ltd.
  
  , a major joint venture between Psion and phone manufacturers
  
   Ericsson
  
  ,
  
   Motorola
  
  , and
  
   Nokia
  
  .
 
  Afterwards, different
  
   software platforms
  
  were created for Symbian, backed by different groups of mobile phone manufacturers. They include
  
   S60
  
  (
  
   Nokia
  
  ,
  
   Samsung
  
  and
  
   LG
  
  ),
  
   UIQ
  
  (
  
   Sony Ericsson
  
  and
  
   Motorola
  
  ) and
  
   MOAP(S)
  
  (Japanese only such as
  
   Fujitsu
  
  ,
  
   Sharp
  
  etc.).
 
  With no major competition in the smartphone OS then (
  
   Palm OS
  
  and
  
   Windows Mobile
  
  were comparatively small players), Symbian reached as high as 67% of the global smartphone market share in 2006.
  

    [23]
   


  Despite its sizable market share then, Symbian was at various stages difficult to develop for: First (at around early-to-mid-2000's) due to the complexity of then the only native programming languages
  
   OPL
  
  and Symbian C++ and of the OS itself; then the obstinate developer bureaucracy, along with high prices of various
  
   IDEs
  
  and
  
   SDKs
  
  , which were prohibitive for independent or very small developers; and then the subsequent fragmentation, which was in part caused by infighting among and within manufacturers, each of which also had their own IDEs and SDKs. All of this discouraged third-party developers, and served to cause the native app ecosystem for Symbian not to evolve to a scale later reached by Apple's App Store or Android's Google Play.
 
  By contrast, iPhone OS (renamed
  
   iOS
  
  in 2010) and
  
   Android
  
  had comparatively simpler design, provided easier and much more centralized infrastructure to create and obtain third-party apps, offered certain developer tools and programming languages with a manageable level of complexity, and having capabilities such as multitasking and graphics in order to meet future consumer demands.
 
  Although Symbian was difficult to program for, this issue could be worked around by creating Java Mobile Edition apps, ostensibly under a "write once, run anywhere" slogan.
  

    [24]
   

  This wasn't always the case because of fragmentation due to different device screen sizes and differences in levels of Java ME support on various devices.
 
  In June 2008,
  
   Nokia
  
  announced the acquisition of
  
   Symbian Ltd.
  
  , and a new independent non-profit organization called the
  
   Symbian Foundation
  
  was established.
  
   Symbian OS
  
  and its associated user interfaces
  
   S60
  
  ,
  
   UIQ
  
  and
  
   MOAP(S)
  
  were contributed by their owners
  
   Nokia
  
  ,
  
   NTT DoCoMo
  
  ,
  
   Sony Ericsson
  
  and
  
   Symbian Ltd.
  
  , to the foundation with the objective of creating the Symbian platform as a royalty-free, open source software, under the
  
   OSI
  
  - and
  
   FSF
  
  -approved
  
   Eclipse Public License (EPL)
  
  . The platform was designated as the successor to Symbian OS, following the official launch of the Symbian Foundation in April 2009. The Symbian platform was officially made available as open source code in February 2010.
  

    [25]
   


  Nokia became the major contributor to Symbian's code, since it then possessed the development resources for both the Symbian OS core and the user interface. Since then Nokia maintained its own code repository for the platform development, regularly releasing its development to the public repository.
  

    [26]
   

  Symbian was intended to be developed by a community led by the
  
   Symbian Foundation
  
  , which was first announced in June 2008 and which officially launched in April 2009. Its objective was to publish the source code for the entire Symbian platform under the
  
   OSI
  
  - and
  
   FSF
  
  -approved
  
   Eclipse Public License (EPL)
  
  . The code was published under EPL on 4 February 2010; Symbian Foundation reported this event to be the largest codebase moved to Open Source in history.
  

    [25]
   



    [27]
   


  However, some important components within Symbian OS were licensed from third parties, which prevented the foundation from publishing the full source under EPL immediately; instead much of the source was published under a more restrictive Symbian Foundation License (SFL) and access to the full
  
   source code
  
  was limited to member companies only, although membership was open to any organisation.
  

    [28]
   

  Also, the open-source Qt framework was introduced to Symbian in 2010, as the primary upgrade path to
  
   MeeGo
  
  , which was to be the next mobile operating system to replace and supplant Symbian on high-end devices; Qt was by its nature free and very convenient to develop with. Several other frameworks were deployed to the platform, among them Standard C/C++, Python, Ruby, and Flash Lite. IDEs and SDKs were developed and then released for free, and app development for Symbian picked up.
 
  In November 2010, the Symbian Foundation announced that due to changes in global economic and market conditions (and also a lack of support from members such as
  
   Samsung
  


    [29]
   

  and
  
   Sony Ericsson
  
  ), it would transition to a licensing-only organisation;
  

    [30]
   

  Nokia announced it would take over the stewardship of the Symbian platform. Symbian Foundation would remain the trademark holder and licensing entity and would only have non-executive directors involved.
 
  With market share sliding from 39% in Q32010 to 31% in Q42010,
  

    [31]
   

  Symbian was losing ground to iOS and Android quickly, eventually falling behind Android in Q42010.
  

    [32]
   


   Stephen Elop
  
  was appointed the CEO of Nokia in September 2010, and on 11 February 2011, he announced a partnership with
  
   Microsoft
  
  that would see Nokia adopt
  
   Windows Phone
  
  as its primary smartphone platform,
  

    [33]
   

  and Symbian would be gradually phased out, together with MeeGo.
  

    [14]
   

  As a consequence, Symbian's market share fell, and application developers for Symbian dropped out rapidly. Research in June 2011 indicated that over 39% of mobile developers using Symbian at the time of publication were planning to abandon the platform.
  

    [34]
   


  By 5 April 2011, Nokia ceased to openly source any portion of the Symbian software and reduced its collaboration to a small group of pre-selected partners in Japan.
  

    [5]
   

  Source code released under the EPL remains available in third party repositories.
  

    [35]
   



    [36]
   


  On 22 June 2011, Nokia made an agreement with
  
   Accenture
  
  for an outsourcing program. Accenture will provide Symbian-based software development and support services to Nokia through 2016; about 2,800 Nokia employees became Accenture employees as of October 2011.
  

    [16]
   

  The transfer was completed on 30 September 2011.
  

    [6]
   


  Nokia terminated its support of software development and maintenance for Symbian with effect from 1 January 2014, thereafter refusing to publish new or changed Symbian applications or content in the Nokia Store and terminating its 'Symbian Signed' program for software certification.
  

    [37]
   


  Symbian has had a native graphics toolkit since its inception, known as AVKON (formerly known as
  
   Series 60
  
  ). S60 was designed to be manipulated by a keyboard-like interface metaphor, such as the ~15-key augmented telephone keypad, or the mini-QWERTY keyboards. AVKON-based software is binary-compatible with Symbian versions up to and including Symbian^3.
 
  Symbian^3 includes the
  
   Qt framework
  
  , which is now the recommended user interface toolkit for new applications. Qt can also be installed on older Symbian devices.
 
  Symbian^4 was planned to introduce a new GUI library framework specifically designed for a touch-based interface, known as "UI Extensions for Mobile" or UIEMO (internal project name "Orbit"), which was built on top of Qt Widget; a preview was released in January 2010, however in October 2010 Nokia announced that Orbit/UIEMO had been cancelled.
 
  Nokia currently recommends that developers use
  
   Qt Quick
  
  with
  
   QML
  
  , the new high-level declarative UI and scripting framework for creating visually rich touchscreen interfaces that allows development for both Symbian and
  
   MeeGo
  
  ; it will be delivered to existing Symbian^3 devices as a Qt update. When more applications gradually feature a user interface reworked in Qt, the legacy S60 framework (AVKON) will be deprecated and no longer included with new devices at some point, thus breaking binary compatibility with older S60 applications.
  

    [38]
   



    [39]
   


  Symbian^3 and earlier have a built-in
  
   WebKit
  
  based
  
   browser
  
  . Symbian was the first mobile platform to make use of WebKit (in June 2005).
  

    [40]
   

  Some older Symbian models have
  
   Opera Mobile
  
  as their default browser.
 
  Nokia released a new browser with the release of Symbian Anna with improved speed and an improved user interface.
  

    [41]
   


  Symbian has strong localization support enabling manufacturers and 3rd party application developers to localize their Symbian based products in order to support global distribution. Current Symbian release (Symbian Belle) has support for 48 languages, which Nokia makes available on device in language packs (set of languages which cover the languages commonly spoken in the area where the device variant is intended to be sold). All language packs have in common English (or a locally relevant dialect of it). The supported languages [with dialects] (and scripts) in Symbian Belle are:
 
  Symbian Belle marks the introduction of Kazakh, while Korean is no longer supported.
 
  From 2010, Symbian switched to using standard C++ with
  
   Qt
  
  as the main SDK, which can be used with either
  
   Qt Creator
  
  or
  
   Carbide.c++
  
  . Qt supports the older Symbian/S60 3rd (starting with Feature Pack 1, a.k.a. S60 3.1) and Symbian/S60 5th Edition (a.k.a. S60 5.01b) releases, as well as the new Symbian platform. It also supports
  
   Maemo
  
  and
  
   MeeGo
  
  , Windows, Linux and Mac OS X.
  

    [42]
   



    [43]
   


  Alternative application development can be done using
  
   Python
  
  (see
  
   Python for S60
  
  ),
  
   Adobe Flash Lite
  
  or
  
   Java ME
  
  .
 
  Symbian OS previously used a Symbian specific C++ version, along with
  
   Carbide.c++
  

   integrated development environment
  
  (IDE), as the native application development environment.
 
  Web Run time (WRT) is a portable application framework that allows creating
  
   widgets
  
  on the
  
   S60 Platform
  
  ; it is an extension to the S60
  
   WebKit
  
  based browser that allows launching multiple browser instances as separate JavaScript applications.
  

    [44]
   



    [45]
   


  As of 2010, the SDK for Symbian is standard C++, using
  
   Qt
  
  . It can be used with either
  
   Qt Creator
  
  , or Carbide (the older IDE previously used for Symbian development).
  

    [42]
   



    [46]
   

  A phone simulator allows testing of Qt apps. Apps compiled for the simulator are compiled to native code for the development platform, rather than having to be emulated.
  

    [47]
   

  Application development can either use C++ or
  
   QML
  
  .
 
  As Symbian OS is written in C++ using Symbian Software's coding standards, it is possible to develop using Symbian C++, although it is not a standard implementation. Before the release of the Qt SDK, this was the standard development environment. There were multiple platforms based on Symbian OS that provided
  
   software development kits
  
  (SDKs) for application developers wishing to target Symbian OS devices, the main ones being UIQ and S60. Individual phone products, or families, often had SDKs or SDK extensions downloadable from the maker's website too.
 
  The SDKs contain documentation, the header files and library files needed to build Symbian OS software, and a Windows-based emulator ("WINS"). Up until Symbian OS version 8, the SDKs also included a version of the
  
   GNU Compiler Collection
  
  (GCC) compiler (a
  
   cross-compiler
  
  ) needed to build software to work on the device.
 
  Symbian OS 9 and the Symbian platform use a new
  
   application binary interface
  
  (ABI) and needed a different compiler. A choice of compilers is available including a newer version of GCC (see external links below).
 
  Unfortunately, Symbian C++ programming has a steep
  
   learning curve
  
  , as Symbian C++ requires the use of special techniques such as descriptors, active objects and the cleanup stack. This can make even relatively simple programs initially harder to implement than in other environments. It is possible that the techniques, developed for the much more restricted mobile hardware and compilers of the 1990s, caused extra complexity in source code because programmers are required to concentrate on low-level details instead of more application-specific features. As of 2010, these issues are no longer the case when using standard C++, with the Qt SDK.
 
  Symbian C++ programming is commonly done with an
  
   integrated development environment
  
  (IDE). For earlier versions of Symbian OS, the commercial IDE
  
   CodeWarrior
  
  for Symbian OS was favoured. The CodeWarrior tools were replaced during 2006 by
  
   Carbide.c++
  
  , an
  
   Eclipse
  
  -based IDE developed by Nokia. Carbide.c++ is offered in four different versions: Express, Developer, Professional, and OEM, with increasing levels of capability. Fully featured software can be created and released with the Express edition, which is free. Features such as UI design, crash debugging etc. are available in the other, charged-for, editions.
  
   Microsoft Visual Studio
  
  2003 and 2005 are also supported via the
  
   Carbide.vs
  
  plugin.
 
  Symbian devices can also be programmed using
  
   Python
  
  ,
  
   Java ME
  
  ,
  
   Flash Lite
  
  ,
  
   Ruby
  
  ,
  
   .NET
  
  ,
  
   Web Runtime (WRT)
  
  Widgets and Standard
  
   C
  
  /
  
   C++
  
  .
  

    [48]
   


  Visual Basic programmers can use
  
   NS Basic
  
  to develop apps for S60 3rd Edition and UIQ 3 devices.
 
  In the past,
  
   Visual Basic
  
  ,
  
   Visual Basic .NET
  
  , and
  
   C#
  
  development for Symbian were possible through
  
   AppForge
  
  Crossfire, a plugin for Microsoft Visual Studio. On 13 March 2007 AppForge ceased operations; Oracle purchased the intellectual property, but
  
   announced
  
  that they did not plan to sell or provide support for former AppForge products.
  
   Net60
  
  , a .NET compact framework for Symbian, which is developed by redFIVElabs, is sold as a commercial product. With Net60, VB.NET and C# (and other) source code is compiled into an intermediate language (IL) which is executed within the Symbian OS using a just-in-time compiler. (As of 18/1/10 RedFiveLabs has ceased development of Net60 with this announcement on their landing page: "At this stage we are pursuing some options to sell the IP so that Net60 may continue to have a future".)
 
  There is also a version of a
  
   Borland
  
  IDE for Symbian OS. Symbian OS development is also possible on
  
   Linux
  
  and
  
   Mac OS X
  
  using tools and methods developed by the community, partly enabled by Symbian releasing the source code for key tools. A plugin that allows development of Symbian OS applications in Apple's
  
   Xcode
  
  IDE for Mac OS X was available.
  

    [49]
   



   Java ME
  
  applications for Symbian OS are developed using standard techniques and tools such as the
  
   Sun Java Wireless Toolkit
  
  (formerly the J2ME Wireless Toolkit). They are packaged as JAR (and possibly JAD) files. Both CLDC and CDC applications can be created with
  
   NetBeans
  
  . Other tools include
  
   SuperWaba
  
  , which can be used to build Symbian 7.0 and 7.0s programs using Java.
 
  Nokia S60 phones can also run
  
   Python
  
  scripts when the interpreter
  
   Python for S60
  
  is installed, with a custom made API that allows for Bluetooth support and such. There is also an interactive console to allow the user to write Python scripts directly from the phone.
 
  Once developed, Symbian applications need to find a route to customers' mobile phones. They are packaged in
  
   SIS
  
  files which may be installed over-the-air, via PC connect, Bluetooth or on a memory card. An alternative is to partner with a phone manufacturer and have the software included on the phone itself. Applications must be Symbian Signed for Symbian OS 9.x in order to make use of certain capabilities (system capabilities, restricted capabilities and device manufacturer capabilities).
  

    [50]
   

  Applications can now be signed for free.
  

    [51]
   


  Symbian's design is subdivided into
  
   technology domains
  
  ,
  

    [52]
   

  each of which comprises a number of software
  
   packages
  
  .
  

    [53]
   

  Each technology domain has its own roadmap, and the Symbian Foundation has a team of technology managers who manage these technology domain roadmaps.
 
  Every package is allocated to exactly one technology domain, based on the general functional area to which the package contributes and by which it may be influenced. By grouping related packages by themes, the Symbian Foundation hopes to encourage a strong community to form around them and to generate discussion and review.
 
  The Symbian System Model
  

    [54]
   

  illustrates the scope of each of the technology domains across the platform packages.
 
  Packages are owned and maintained by a package owner, a named individual from an organization member of the Symbian Foundation, who accepts code contributions from the wider Symbian community and is responsible for package.
 
  The Symbian kernel (
  
   EKA2
  
  ) supports sufficiently fast
  
   real-time
  
  response to build a single-core phone around it –  that is, a phone in which a single processor core executes both the user
  
   applications
  
  and the
  
   signalling stack
  
  .
  

    [55]
   

  The real-time kernel has a
  
   microkernel
  
  architecture containing only the minimum, most basic primitives and functionality, for maximum robustness, availability and responsiveness. It has been termed a
  
   nanokernel
  
  , because it needs an extended kernel to implement any other abstractions. It contains a
  
   scheduler
  
  ,
  
   memory management
  
  and device drivers, with networking, telephony and
  
   file system
  
  support services in the OS Services Layer or the Base Services Layer. The inclusion of device drivers means the kernel is not a
  
   true
  
  microkernel.
 
  Symbian features
  
   pre-emptive multitasking
  
  and
  
   memory protection
  
  , like other operating systems (especially those created for use on desktop computers). EPOC's approach to multitasking was inspired by
  
   VMS
  
  and is based on asynchronous server-based events.
 
  Symbian OS was created with three systems design principles in mind:
 
  To best follow these principles, Symbian uses a
  
   microkernel
  
  , has a request-and-callback approach to services, and maintains separation between user interface and engine. The OS is optimised for low-power battery-based devices and for ROM-based systems (e.g. features like XIP and re-entrancy in shared libraries). Applications, and the OS itself, follow an object-oriented design:
  
   Model-view-controller (MVC)
  
  .
 
  Later OS iterations diluted this approach in response to market demands, notably with the introduction of a real-time kernel and a platform security model in versions 8 and 9.
 
  There is a strong emphasis on conserving resources which is exemplified by Symbian-specific programming idioms like
  
   descriptors
  
  and a
  
   cleanup stack
  
  . Similar methods exist to conserve storage space. Further, all Symbian programming is event-based, and the
  
   central processing unit
  
  (CPU) is switched into a low power mode when applications are not directly dealing with an event. This is done via a programming idiom called
  
   active objects
  
  . Similarly the Symbian approach to threads and processes is driven by reducing overheads.
 
  The All over Model contains the following layers, from top to bottom:
 
  The Base Services Layer is the lowest level reachable by user-side operations; it includes the
  
   File Server
  
  and User Library, a Plug-In
  
   Framework
  
  which manages all plug-ins, Store, Central Repository,
  
   DBMS
  
  and cryptographic services. It also includes the Text Window Server and the Text Shell: the two basic services from which a completely functional port can be created without the need for any higher layer services.
 
  Symbian has a
  
   microkernel
  
  architecture, which means that the minimum necessary is within the kernel to maximise robustness, availability and responsiveness. It contains a
  
   scheduler
  
  ,
  
   memory management
  
  and device drivers, but other services like networking, telephony and
  
   filesystem
  
  support are placed in the OS Services Layer or the Base Services Layer. The inclusion of device drivers means the kernel is not a
  
   true
  
  microkernel. The
  
   EKA2
  
  real-time kernel, which has been termed a
  
   nanokernel
  
  , contains only the most basic primitives and requires an extended kernel to implement any other abstractions.
 
  Symbian is designed to emphasise compatibility with other devices, especially removable media file systems. Early development of EPOC led to adopting
  
   FAT
  
  as the internal file system, and this remains, but an object-oriented persistence model was placed over the underlying FAT to provide a
  
   POSIX
  
  -style interface and a streaming model. The internal data formats rely on using the same APIs that create the data to run all file manipulations. This has resulted in data-dependence and associated difficulties with changes and
  
   data migration
  
  .
 
  There is a large networking and communication subsystem, which has three main servers called: ETEL (EPOC telephony), ESOCK (EPOC sockets) and C32 (responsible for serial communication). Each of these has a plug-in scheme. For example, ESOCK allows different ".PRT" protocol modules to implement various networking protocol schemes. The subsystem also contains code that supports short-range communication links, such as
  
   Bluetooth
  
  ,
  
   IrDA
  
  and
  
   USB
  
  .
 
  There is also a large volume of
  
   user interface
  
  (UI) Code. Only the base classes and substructure were contained in Symbian OS, while most of the actual user interfaces were maintained by third parties. This is no longer the case. The three major UIs –  S60, UIQ and MOAP –  were contributed to Symbian in 2009. Symbian also contains graphics, text layout and font rendering libraries.
 
  All native Symbian C++ applications are built up from three framework classes defined by the application architecture: an application class, a document class and an application user interface class. These classes create the fundamental application behaviour. The remaining needed functions, the application view, data model and data interface, are created independently and interact solely through their APIs with the other classes.
 
  Many other things do not yet fit into this model –  for example,
  
   SyncML
  
  ,
  
   Java ME
  
  providing another set of APIs on top of most of the OS and
  
   multimedia
  
  . Many of these are frameworks, and vendors are expected to supply plug-ins to these frameworks from third parties (for example,
  
   Helix Player
  
  for multimedia
  
   codecs
  
  ). This has the advantage that the APIs to such areas of functionality are the same on many phone models, and that vendors get a lot of flexibility. But it means that phone vendors needed to do a great deal of integration work to make a Symbian OS phone.
 
  Symbian includes a reference user-interface called "TechView." It provides a basis for starting customisation and is the environment in which much Symbian test and example code runs. It is very similar to the user interface from the
  
   Psion Series 5 personal organiser
  
  and is not used for any production phone user interface.
 
  Symbian, as it advanced to OS version 7.0, spun off into several different
  
   graphical user interfaces
  
  , each backed by a certain company or group of companies. Unlike
  
   Android OS
  
  's cosmetic GUIs, Symbian GUIs are referred to as "platforms" due to more significant modifications and integrations. Things became more complicated when applications developed for different Symbian GUI platforms were not compatible with each other, and this led to OS fragmentation.
  

    [56]
   


  User Interfaces platforms that run on or are based on Symbian OS include:
 

      Samsung:
     

      i8910 Omnia HD
     
     ,
     

       [76]
      



      Sony Ericsson:
     

      Satio
     
     ,
     
      Vivaz
     
     ,
     
      Vivaz Pro
     

  * manufactured by
  
   Fujitsu
  

  † manufactured by
  
   Sharp
  

  ▲
  
   Software update service for Nokia Belle and Symbian (S60) phones is discontinued at the end of December 2015
  

  On 16 November 2006, the 100 millionth
  
   smartphone
  
  running the OS was shipped.
  

    [77]
   

  As of 21 July 2009, more than 250 million devices running Symbian OS had been produced.
  

    [78]
   


  In 2006, Symbian had 73% of the smartphone market,
  

    [79]
   

  compared with 22.1% of the market in the second quarter of 2011.
  

    [80]
   


  Symbian has lost market share over the years as the market has dramatically grown, with new competing platforms entering the market, though its sales have increased during the same timeframe. E.g., although Symbian's share of the global smartphone market dropped from 52.4% in 2008 to 47.2% in 2009, shipments of Symbian devices grew 4.8%, from 74.9 million units to 78.5 million units.
  

    [81]
   

  From Q2 2009 to Q2 2010, shipments of Symbian devices grew 41.5%, by 8.0 million units, from 19,178,910 units to 27,129,340; compared to an increase of 9.6 million units for Android, 3.3 million units for RIM, and 3.2 million units for Apple.
  

    [82]
   


  Prior reports on device shipments as published in February 2010 showed that the Symbian devices formed a 47.2% share of the smart mobile devices shipped in 2009, with
  
   RIM
  
  having 20.8%, Apple having 15.1% (via
  
   iOS
  
  ), Microsoft having 8.8% (via
  
   Windows CE
  
  and
  
   Windows Mobile
  
  ) and
  
   Android
  
  having 4.7%.
  

    [81]
   


  In the number of "smart mobile device" sales, Symbian devices were the market leaders for 2010. Statistics showed that Symbian devices formed a 37.6% share of smart mobile devices sold, with
  
   Android
  
  having 22.7%,
  
   RIM
  
  having 16%, and Apple having 15.7% (via
  
   iOS
  
  ).
  

    [83]
   

  Some estimates indicate that the number of mobile devices shipped with the Symbian OS up to the end of Q2 2010 is 385 million.
  

    [84]
   


  Over the course of 2009–10,
  
   Motorola
  
  ,
  
   Samsung
  
  ,
  
   LG
  
  , and
  
   Sony Ericsson
  
  announced their withdrawal from Symbian in favour of alternative platforms including Google's
  
   Android
  
  , Microsoft's
  
   Windows Phone
  
  .
  

    [85]
   



    [86]
   



    [87]
   



    [88]
   


  In Q2 2012, according to IDC worldwide market share has dropped to an all-time low of 4.4%.
  

    [89]
   


  The users of Symbian in the countries with non-Latin alphabets (such as Russia, Ukraine and others) have been criticizing the complicated method of language switching for many years.
  

    [90]
   

  For example, if a user wants to type a Latin letter, they must call the menu, click the languages item, use arrow keys to choose, for example, the English language from among many other languages, and then press the 'OK' button. After typing the Latin letter, the user must repeat the procedure to return to their native keyboard. This method slows down typing significantly. In touch-phones and QWERTY phones the procedure is slightly different but remains time-consuming. All other mobile operating systems, as well as Nokia's S40 phones, enable switching between two initially selected languages by one click or a single gesture.
 
  Early versions of the firmware for the original
  
   Nokia N97
  
  , running on Symbian^1/Series 60 5th Edition have been heavily criticized as buggy (also contributed by the low amount of
  
   RAM
  
  installed in the phone).
  

    [91]
   


  In November 2010, Smartphone blog
  
   All About Symbian
  
  criticized the performance of
  
   Symbian's default web browser
  
  and recommended the alternative browser
  
   Opera Mobile
  
  .
  

    [92]
   

  Nokia's Senior Vice President
  
   Jo Harlow
  
  promised an updated browser in the first quarter of 2011.
  

    [93]
   


  There are many different versions and editions of Symbian, which led to fragmentation. Apps and software may be incompatible when installed across different versions of Symbian.
  

    [94]
   


  Symbian OS is subject to a variety of viruses, the best known of which is
  
   Cabir
  
  . Usually these send themselves from phone to phone by Bluetooth. So far, none have taken advantage of any flaws in Symbian OS –  instead, they have all asked the user whether they would like to install the software, with somewhat prominent warnings that it can't be trusted, although some rely on
  
   social engineering
  
  , often in the form of messages that come with the malware,
  
   purporting to be a utility
  
  , game or some other application for Symbian.
 
  However, with a view that the average mobile phone user shouldn't have to worry about security, Symbian OS 9.x adopted a UNIX-style
  
   capability
  
  model (permissions per process, not per object). Installed software is theoretically unable to do damaging things (such as costing the user money by sending network data) without being digitally signed –  thus making it traceable. Commercial developers who can afford the cost can apply to have their software signed via the Symbian Signed program. Developers also have the option of self-signing their programs. However, the set of available features does not include access to Bluetooth, IrDA, GSM CellID, voice calls, GPS and few others. Some operators have opted to disable all certificates other than the Symbian Signed certificates.
 
  Some other hostile programs are listed below, but all of them still require the input of the user to run.
 
  A new form of malware threat to Symbian OS in the form of 'cooked firmware' was demonstrated at the International Malware Conference,
  
   MalCon
  
  , December 2010, by Indian hacker Atul Alex.
  

    [95]
   



    [96]
   


  Symbian OS 9.x devices can be hacked to remove the platform security introduced in OS 9.1 onwards, allowing users to execute unsigned code.
  

    [97]
   

  This allows altering system files, and access to previously locked areas of the OS. The hack was criticised by Nokia for potentially increasing the
  
   threat
  
  posed by mobile viruses as
  
   unsigned code
  
  can be executed.
  

    [98]
   


     EPOC16 featured a primarily monochrome, keyboard-operated graphical interface
     

       [99]
      

     –  the hardware for which it was designed originally had
     
      pointer
     
     input in the form of a digitiser panel.
    
     In the late 1990s, the operating system was referred to as
     
      EPOC16
     
     to distinguish it from Psion's then-new EPOC32 OS.
    
     The EPOC32 operating system, at the time simply referred to as EPOC, was later renamed Symbian OS. Adding to the confusion with names, before the change to Symbian, EPOC16 was often referred to as SIBO to distinguish it from the "new" EPOC. Despite the similarity of the names, EPOC32 and EPOC16 were completely different operating systems, EPOC32 being written in C++ from a new codebase with development beginning during the mid-1990s.
    
     EPOC32 was a
     
      pre-emptive multitasking
     
     , single user operating system with memory protection, which encourages the application developer to separate their program into an engine and an
     
      interface
     
     . The Psion line of PDAs come with a
     
      graphical user interface
     
     called
     
      EIKON
     
     which is specifically tailored for handheld machines with a keyboard (thus looking perhaps more similar to desktop GUIs than palmtop GUIs
     

       [100]
      

     ). However, one of EPOC's characteristics is the ease with which new GUIs can be developed based on a core set of GUI classes, a feature which has been widely explored from
     
      Ericsson R380
     
     and onwards.
    
     EPOC32 was originally developed for the
     
      ARM family
     
     of processors, including the
     
      ARM7
     
     ,
     
      ARM9
     
     ,
     
      StrongARM
     
     and Intel's
     
      XScale
     
     , but can be compiled towards target devices using several other processor types.
    
     During the development of EPOC32, Psion planned to license EPOC to third-party device manufacturers, and spin off its software division as Psion Software. One of the first licensees was the short-lived
     

       Geofox
      

     , which halted production with less than 1,000 units sold.
     
      Ericsson
     
     marketed a rebranded Psion Series 5mx called the
     
      MC218
     
     , and later created the EPOC Release 5.1 based
     
      smartphone
     
     , the
     
      R380
     
     .
     
      Oregon Scientific
     
     also released a budget EPOC device, the
     

       Osaris
      

     (notable as the only EPOC device to ship with Release 4).
    
     Work started on the 32-bit version in late 1994.
    
     The
     
      Series 5
     
     device, released in June 1997, used the first iterations of the EPOC32 OS, codenamed "Protea", and the "Eikon" graphical user interface.
    
     The Oregon Scientific
     
      Osaris
     
     was the only PDA to use the ER4.
    
     The
     
      Psion Series 5mx
     
     ,
     
      Psion Series 7
     
     ,
     
      Psion Revo
     
     ,
     
      Diamond Mako
     
     ,
     
      Psion netBook
     
     and
     
      Ericsson MC218
     
     were released in 1999 using ER5. A phone project was announced at
     
      CeBIT
     
     , the Phillips Illium/Accent, but did not achieve a commercial release. This release has been retrospectively dubbed Symbian OS 5.
    
     The first phone using ER5u, the
     
      Ericsson R380
     
     was released in November 2000. It was not an 'open' phone –  software could not be installed. Notably, a number of never-released Psion prototypes for next generation PDAs, including a Bluetooth Revo successor codenamed "Conan" were using ER5u. The 'u' in the name refers to the fact that it supported
     
      Unicode
     
     .
    
     In June 1998, Psion Software became
     
      Symbian Ltd.
     
     , a major joint venture between Psion and phone manufacturers
     
      Ericsson
     
     ,
     
      Motorola
     
     , and
     
      Nokia
     
     . As of Release 6, EPOC became known simply as Symbian OS.
    
     The first 'open' Symbian OS phone, the
     
      Nokia 9210
     
     Communicator, was released in June 2001.
     
      Bluetooth
     
     support was added. Almost 500,000 Symbian phones were shipped in 2001, rising to 2.1 million the following year.
    
     Development of different UIs was made generic with a "reference design strategy" for either 'smartphone' or 'communicator' devices, subdivided further into keyboard- or tablet-based designs. Two reference UIs (DFRDs or Device Family Reference Designs) were shipped –  Quartz and Crystal. The former was merged with Ericsson's 'Ronneby' design and became the basis for the
     
      UIQ
     
     interface; the latter reached the market as the Nokia
     
      Series 80
     
     UI.
    
     Later DFRDs were Sapphire, Ruby, and Emerald. Only Sapphire came to market, evolving into the Pearl DFRD and finally the Nokia
     
      Series 60
     
     UI, a keypad-based 'square' UI for the first true smartphones. The first one of them was the
     
      Nokia 7650
     
     smartphone (featuring Symbian OS 6.1), which was also the first with a built-in camera, with VGA (0.3 Mpx = 640×480) resolution. Other notable S60 Symbian 6.1 devices are the
     
      Nokia 3650
     
     , the short lived
     
      Sendo X
     
     and
     
      Siemens SX1
     
     –  the first and the last Symbian phone from Siemens.
    
     Despite these efforts to be generic, the UI was clearly split between competing companies: Crystal or Sapphire was Nokia, Quartz was Ericsson. DFRD was abandoned by Symbian in late 2002, as part of an active retreat from UI development in favour of 'headless' delivery. Pearl was given to Nokia, Quartz development was spun off as UIQ Technology AB, and work with Japanese firms was quickly folded into the
     
      MOAP
     
     standard.
    
     One million Symbian phones were shipped in Q1 2003, with the rate increasing to one million a month by the end of 2003.
    
     Symbian OS 7.0s was a version of 7.0 special adapted to have greater
     
      backward compatibility
     
     with Symbian OS 6.x, partly for compatibility between the Communicator 9500 and its predecessor the Communicator 9210.
    
     In 2004, Psion sold its stake in Symbian. The same year, the first
     
      worm
     
     for mobile phones using Symbian OS,
     

       Cabir
      

     , was developed, which used
     
      Bluetooth
     
     to spread itself to nearby phones. See
     
      Cabir
     
     and
     
      Symbian OS threats
     
     .
    
     Also included were new APIs to support
     
      CDMA
     
     ,
     
      3G
     
     , two-way data streaming,
     
      DVB-H
     
     , and
     
      OpenGL
     
     ES with
     
      vector graphics
     
     and direct screen access.
    
     The first and maybe the most famous smartphone featuring Symbian OS 8.1a was
     
      Nokia N90
     
     in 2005,
     
      Nokia
     
     's first in
     
      Nseries
     
     .
    
     Symbian OS has generally maintained reasonable
     
      binary code compatibility
     
     . In theory the OS was BC from ER1-ER5, then from 6.0 to 8.1b. Substantial changes were needed for 9.0, related to tools and security, but this should be a one-off event. The move from requiring ARMv4 to requiring ARMv5 did not break backwards compatibility.
    
     Symbian 9.1 introduced capabilities and a
     
      Platform Security
     
     framework. To access certain APIs, developers have to sign their application with a
     
      digital signature
     
     . Basic capabilities are user-grantable and developers can
     
      self-sign
     
     them, while more advanced capabilities require certification and signing via the Symbian Signed program, which uses independent 'test houses' and phone manufacturers for approval. For example, file writing is a user-grantable capability while access to Multimedia Device Drivers require phone manufacturer approval. A TC TrustCenter
     
      ACS Publisher ID certificate
     
     is required by the developer for signing applications.
    
     Nokia phones with Symbian OS 9.2 OS include the
     
      Nokia E71
     
     ,
     
      Nokia E90
     
     ,
     
      Nokia N95
     
     ,
     
      Nokia N82
     
     ,
     
      Nokia N81
     
     and
     
      Nokia 5700
     
     .
    
     Used as the basis for Symbian^1, the first Symbian platform release. The release is also better known as
     
      S60 5th edition
     
     , as it is the bundled interface for the OS.
    
     On 24 August 2011, Nokia announced it officially for three new smartphones, the
     
      Nokia 600
     
     (later replaced by
     
      Nokia 603
     
     ),
     
      Nokia 700
     
     , and
     
      Nokia 701
     
     .
     

       [105]
      


     Nokia officially renamed Symbian Belle to Nokia Belle in a company blog post.
     

       [106]
      



       [107]
      


     Nokia Belle adds to the Anna improvements with a pull-down status/notification bar, deeper
     
      near field communication
     
     integration, free-form re-sizable homescreen widgets, and six homescreens instead of the previous three. As of 7 February 2012, Nokia Belle update is available for most phone models through Nokia Suite, coming later to Australia. Users can check the availability at the Nokia homepage.
     

       [108]
      


     On 1 March 2012, Nokia announced a Feature Pack 1 update for Nokia Belle which will be available as an update to Nokia 603, 700, 701 (excluding others), and for
     
      Nokia 808 PureView
     
     natively.
    
     The latest software release for Nokia 1st generation Symbian Belle smartphones (Nokia N8,
     
      C7
     
     ,
     
      C6-01
     
     , Oro,
     
      500
     
     ,
     
      X7
     
     ,
     
      E7
     
     ,
     
      E6
     
     ) is Nokia Belle Refresh (111.040.1511).
     

       [109]
      


     In October 2012, the Nokia Belle Feature Pack 2, widely considered the last major update for Symbian, was released for Nokia 603, 700, 701, and 808 PureView.
     

       [110]
      

